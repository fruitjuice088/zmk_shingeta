name: Build my keymap

on:
  push:
    paths:
      - ".github/workflows/build.yml"
      - "app/**"
  workflow_dispatch:

env:
  KEYMAP: revxlp36

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
    strategy:
      matrix:
        include:
          - board: seeeduino_xiao_ble
            shield: revxlp36
            artifact-name: revxlp36_xiao_ble
          - board: seeeduino_xiao_ble
            shield: settings_reset
            artifact-name: revxlp36_xiao_ble_reset
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare variables
        shell: sh -x {0}
        env:
          board: ${{ matrix.board }}
          shield: ${{ matrix.shield }}
          artifact_name: ${{ matrix.artifact-name }}
        run: |
          echo "display_name=${shield:+$shield - }${board}" >> $GITHUB_ENV
          echo "artifact_name=${artifact_name:-${shield:+$shield-}${board}-zmk}" >> $GITHUB_ENV

      - name: Cache west modules
        uses: actions/cache@v4
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('app/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        timeout-minutes: 2
        continue-on-error: true

      - name: West Init
        run: west init -l app
      - name: West Update
        run: west update
      - name: West Zephyr export
        run: west zephyr-export
 
      - name: West Build (${{ env.display_name }})
        shell: sh -x {0}
        run: west build -s app -p -b "${{ matrix.board }}" -- -DSHIELD="${{ matrix.shield }}"
 
      - name: Rename artifacts
        shell: sh -x {0}
        run: |
          mkdir build/artifacts
          cd build
          if [ -f zephyr/zmk.uf2 ]; then
            cp zephyr/zmk.uf2 "artifacts/${{ env.artifact_name }}.uf2"
          elif [ -f "build/zephyr/zmk.bin" ]; then
            cp zephyr/zmk.bin "artifacts/${{ env.artifact_name }}.bin"
          fi
 
      - name: Archive (${{ env.display_name }})
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ env.artifact_name }}
          path: build/artifacts
 
  merge:
    runs-on: ubuntu-latest
    needs: build
    name: Merge Output Artifacts
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: ${{ env.KEYMAP }}
          pattern: artifact-*
          delete-merged: true
